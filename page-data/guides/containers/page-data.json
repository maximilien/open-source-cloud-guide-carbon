{"componentChunkName":"component---src-pages-guides-containers-mdx","path":"/guides/containers/","result":{"pageContext":{"frontmatter":{"title":"Containers","description":"Guide for open source container services on the cloud.","date":"09 August 2021"},"relativePagePath":"/guides/containers.mdx","titleType":"page","MdxNode":{"id":"908197d4-877a-53ca-9d97-ec69c4e69525","children":[],"parent":"b3048aa7-6fe3-599e-8542-c304d77805ab","internal":{"content":"---\ntitle: Containers\ndescription: Guide for open source container services on the cloud.\ndate: 09 August 2021\n---\n\n## What are containers?\n\nContainers are one of the main drivers of open hybrid cloud and multicloud environments [development]. Linux containers offer a way to package and isolate an application and its entire runtime environment. They act as a form of virtualization for your operating system. \n\n_EM: what makes them suitable for cloud environments? I was thinking of things like scalability, speed, and portability (Are those terms triggering you for marketing speak??). What else? They don't require you to own a whole virtualization suite of tools. . . they enable choice b/c you can run your containers/container plaform on any cloud, etc . . . . Another way to reframe this and to cover some key topics is to ask: WHat problems do containers solve?_\n\n## Why do containers matter in an open source cloud?\n\n_EM: I'm torn on including these here in the guide or do we just reference them from the blog that points to the guide?\n\n![survey results](images/survey-containers.png)\n\n![survey results](images/survey-kubernetes.png)\n\n## Solution sketch\n\n_EM: I noticed this in Dr. Max's version. I'm wondering if you think this is necessary? LIke to set up an image of an ideal container environment? Is there such a thing as an ideal container environment?_\n\n## Limitations\n\n_EM: Anything to highlight here?_\n\n## Key open source projects\n\nSome key open source projects and communities that have large, active developer [contributor] communities include:\n\n* Kubernetes\n* Quay\n* Docker\n\n## Cloud comparision\n\n| IBM Cloud | GCP | AWS | Azure |\n| - | - | - | - |\n| IKS | GKE | EKS | AKS |\n\n_EM: DO they only have Kubernetes services? We probably want to have links and full names. Do any of them use Docker? Do we want to highlight underlying Kubernetes ecocystem projects that these clouds use?_\n\n## References\n_EM: Let's list additional resources where people can learn more. Skills network courses, LF or CNCF learning paths and such_\n\n* [Kubernetes](https://kubernetes.io)\n\n","type":"Mdx","contentDigest":"0b50a3c6d6dd6409be9e35944430ea5b","owner":"gatsby-plugin-mdx","counter":72},"frontmatter":{"title":"Containers","description":"Guide for open source container services on the cloud.","date":"09 August 2021"},"exports":{},"rawBody":"---\ntitle: Containers\ndescription: Guide for open source container services on the cloud.\ndate: 09 August 2021\n---\n\n## What are containers?\n\nContainers are one of the main drivers of open hybrid cloud and multicloud environments [development]. Linux containers offer a way to package and isolate an application and its entire runtime environment. They act as a form of virtualization for your operating system. \n\n_EM: what makes them suitable for cloud environments? I was thinking of things like scalability, speed, and portability (Are those terms triggering you for marketing speak??). What else? They don't require you to own a whole virtualization suite of tools. . . they enable choice b/c you can run your containers/container plaform on any cloud, etc . . . . Another way to reframe this and to cover some key topics is to ask: WHat problems do containers solve?_\n\n## Why do containers matter in an open source cloud?\n\n_EM: I'm torn on including these here in the guide or do we just reference them from the blog that points to the guide?\n\n![survey results](images/survey-containers.png)\n\n![survey results](images/survey-kubernetes.png)\n\n## Solution sketch\n\n_EM: I noticed this in Dr. Max's version. I'm wondering if you think this is necessary? LIke to set up an image of an ideal container environment? Is there such a thing as an ideal container environment?_\n\n## Limitations\n\n_EM: Anything to highlight here?_\n\n## Key open source projects\n\nSome key open source projects and communities that have large, active developer [contributor] communities include:\n\n* Kubernetes\n* Quay\n* Docker\n\n## Cloud comparision\n\n| IBM Cloud | GCP | AWS | Azure |\n| - | - | - | - |\n| IKS | GKE | EKS | AKS |\n\n_EM: DO they only have Kubernetes services? We probably want to have links and full names. Do any of them use Docker? Do we want to highlight underlying Kubernetes ecocystem projects that these clouds use?_\n\n## References\n_EM: Let's list additional resources where people can learn more. Skills network courses, LF or CNCF learning paths and such_\n\n* [Kubernetes](https://kubernetes.io)\n\n","fileAbsolutePath":"/home/travis/build/stevemar/open-source-cloud-guide-carbon/src/pages/guides/containers.mdx"}}},"staticQueryHashes":["1364590287","137577622","137577622","2102389209","2102389209","2456312558","2746626797","2746626797","3018647132","3018647132","3037994772","3037994772","768070550"]}